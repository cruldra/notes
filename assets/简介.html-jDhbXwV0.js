import{_ as r,r as n,o as c,c as s,a as e,b as t,d,w as l,e as o}from"./app-Bmelea3n.js";const i={},p=o('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><code>Next.js</code>是一个用于构建<a href="https://www.mongodb.com/languages/full-stack-development" target="_blank" rel="noopener noreferrer"><code>全栈Web应用</code></a>的框架,基于<code>React</code>和<code>Node.js</code>.它主要解决以下几个问题:</p><h2 id="服务器渲染-ssr" tabindex="-1"><a class="header-anchor" href="#服务器渲染-ssr"><span>服务器渲染(SSR)</span></a></h2><p><code>React</code>默认是客户端渲染的,这可能会导致<code>搜索引擎优化(SEO)</code>问题和较差的首屏加载性能.</p>',4),h=e("code",null,"Next.js",-1),m=e("code",null,"服务器渲染(SSR)",-1),u=e("code",null,"HTML",-1),_=o('<h2 id="文件系统路由" tabindex="-1"><a class="header-anchor" href="#文件系统路由"><span>文件系统路由</span></a></h2><p>在<code>Next.js</code>中,每个<code>页面</code>都是一个<code>React</code>组件,并且都存储在<code>pages</code>目录中.<code>文件系统</code>是主要的路由配置方式,这样可以避免繁琐的路由配置.</p><h2 id="自动代码拆分" tabindex="-1"><a class="header-anchor" href="#自动代码拆分"><span>自动代码拆分</span></a></h2><p><code>Next.js</code>可以在需要时自动拆分代码,每个页面只加载该页面所需的代码.这样可以确保初始下载的页面不包含不必要的代码,并且可以保护其他页面不受影响.</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://poe.com/s/drDHIY4mk5UV58ojSa2y" target="_blank" rel="noopener noreferrer">poe-nextjs解决了哪些问题</a></li></ul>',6);function g(f,x){const a=n("RouteLink");return c(),s("div",null,[p,e("p",null,[h,t("可以实现"),d(a,{to:"/Terminology/%E5%89%8D%E7%AB%AF/SSR&CSR.html"},{default:l(()=>[m]),_:1}),t(",这意味着在浏览器接收页面之前,页面的初始"),u,t("是由服务器生成的.")]),_])}const j=r(i,[["render",g],["__file","简介.html.vue"]]),S=JSON.parse('{"path":"/Programming/Frontend/Nextjs/%E7%AE%80%E4%BB%8B.html","title":"简介","lang":"zh-CN","frontmatter":{"title":"简介","comment":false,"editLink":false,"prev":false,"next":false,"order":1,"description":"简介 Next.js是一个用于构建全栈Web应用的框架,基于React和Node.js.它主要解决以下几个问题: 服务器渲染(SSR) React默认是客户端渲染的,这可能会导致搜索引擎优化(SEO)问题和较差的首屏加载性能. Next.js可以实现,这意味着在浏览器接收页面之前,页面的初始HTML是由服务器生成的. 文件系统路由 在Next.js中,...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Programming/Frontend/Nextjs/%E7%AE%80%E4%BB%8B.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"简介"}],["meta",{"property":"og:description","content":"简介 Next.js是一个用于构建全栈Web应用的框架,基于React和Node.js.它主要解决以下几个问题: 服务器渲染(SSR) React默认是客户端渲染的,这可能会导致搜索引擎优化(SEO)问题和较差的首屏加载性能. Next.js可以实现,这意味着在浏览器接收页面之前,页面的初始HTML是由服务器生成的. 文件系统路由 在Next.js中,..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"服务器渲染(SSR)","slug":"服务器渲染-ssr","link":"#服务器渲染-ssr","children":[]},{"level":2,"title":"文件系统路由","slug":"文件系统路由","link":"#文件系统路由","children":[]},{"level":2,"title":"自动代码拆分","slug":"自动代码拆分","link":"#自动代码拆分","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":0.94,"words":283},"filePathRelative":"Programming/Frontend/Nextjs/简介.md","localizedDate":"2024年7月3日","autoDesc":true}');export{j as comp,S as data};
