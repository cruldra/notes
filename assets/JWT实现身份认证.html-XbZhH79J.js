import{_ as e,o as t,c as a,e as n}from"./app-Bmelea3n.js";const i={},r=n('<figure><img src="https://github.com/cruldra/picx-images-hosting/raw/master/image.3nredctxi0.webp" alt="JWT实现身份认证" tabindex="0" loading="lazy"><figcaption>JWT实现身份认证</figcaption></figure><h2 id="步骤概述" tabindex="-1"><a class="header-anchor" href="#步骤概述"><span>步骤概述</span></a></h2><p>使用 JSON Web Token (JWT) 进行身份验证通常涉及以下步骤：</p><ol><li><strong>用户登录</strong></li><li><strong>验证用户凭证</strong></li><li><strong>生成 JWT</strong></li><li><strong>发送 JWT 给用户</strong></li><li><strong>客户端存储 JWT</strong></li><li><strong>客户端发送 JWT</strong></li><li><strong>服务器验证 JWT</strong></li><li><strong>返回响应</strong></li><li><strong>刷新 Token（可选）</strong></li></ol><h2 id="详细流程" tabindex="-1"><a class="header-anchor" href="#详细流程"><span>详细流程</span></a></h2><h3 id="_1-用户登录" tabindex="-1"><a class="header-anchor" href="#_1-用户登录"><span>1. 用户登录</span></a></h3><p>用户向认证服务器提供登录凭证，如用户名和密码。</p><h3 id="_2-验证用户凭证" tabindex="-1"><a class="header-anchor" href="#_2-验证用户凭证"><span>2. 验证用户凭证</span></a></h3><p>认证服务器校验登录凭证的有效性。</p><h3 id="_3-生成-jwt" tabindex="-1"><a class="header-anchor" href="#_3-生成-jwt"><span>3. 生成 JWT</span></a></h3><p>凭证通过验证后，服务器将创建包含用户信息和其他声明的 JWT。JWT 通常包括一个过期时间。</p><h4 id="jwt-结构" tabindex="-1"><a class="header-anchor" href="#jwt-结构"><span>JWT 结构</span></a></h4><ul><li><strong>Header</strong>: 包含 token 类型和哈希算法。</li><li><strong>Payload</strong>: 包含一系列 claims，可以是用户信息或其他数据。</li><li><strong>Signature</strong>: 确保 header 和 payload 在传输中未被篡改的签名。</li></ul><h3 id="_4-发送-jwt-给用户" tabindex="-1"><a class="header-anchor" href="#_4-发送-jwt-给用户"><span>4. 发送 JWT 给用户</span></a></h3><p>认证服务器将生成的 JWT 发送给用户客户端。</p><h3 id="_5-客户端存储-jwt" tabindex="-1"><a class="header-anchor" href="#_5-客户端存储-jwt"><span>5. 客户端存储 JWT</span></a></h3><p>客户端接收 JWT 并将其存储在本地，如在 localStorage 或会话存储中。</p><h3 id="_6-客户端发送-jwt" tabindex="-1"><a class="header-anchor" href="#_6-客户端发送-jwt"><span>6. 客户端发送 JWT</span></a></h3><p>用户请求访问受保护资源时，客户端在 HTTP 请求的 <code>Authorization</code> 头部使用 <code>Bearer</code> 模式附带 JWT。</p><p><code>Authorization: Bearer &lt;token&gt;</code></p><h3 id="_7-服务器验证-jwt" tabindex="-1"><a class="header-anchor" href="#_7-服务器验证-jwt"><span>7. 服务器验证 JWT</span></a></h3><p>服务器验证接收到的 JWT 的签名，并提取用户信息。如果验证通过，服务器将处理请求。</p><h3 id="_8-返回响应" tabindex="-1"><a class="header-anchor" href="#_8-返回响应"><span>8. 返回响应</span></a></h3><p>如果 JWT 有效，服务器执行请求的操作并返回数据。如果 JWT 无效或过期，返回错误信息。</p><h3 id="_9-刷新-token-可选" tabindex="-1"><a class="header-anchor" href="#_9-刷新-token-可选"><span>9. 刷新 Token（可选）</span></a></h3><p>当 JWT 接近过期时，系统可能允许使用刷新 token 换取新的 JWT。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li><strong>安全性</strong>: JWT 应通过 HTTPS 传输，以防止中间人攻击。</li><li><strong>存储</strong>: 避免将 JWT 存储在客户端的 localStorage 中，以免受 XSS 攻击。使用 HttpOnly 的 cookie 是更安全的选择。</li><li><strong>敏感数据</strong>: JWT 可以被解码，因此不要包含敏感数据。</li><li><strong>过期时间</strong>: 为 JWT 设置合理的过期时间，以降低泄露风险。</li><li><strong>刷新机制</strong>: 如果实现刷新机制，确保安全地存储和使用刷新 token。</li></ul>',28),l=[r];function o(s,c){return t(),a("div",null,l)}const p=e(i,[["render",o],["__file","JWT实现身份认证.html.vue"]]),d=JSON.parse('{"path":"/Best%20Practices/Authentication/Json%20Web%20Token/JWT%E5%AE%9E%E7%8E%B0%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81.html","title":"JWT实现身份认证","lang":"zh-CN","frontmatter":{"title":"JWT实现身份认证","comment":false,"editLink":false,"prev":false,"next":false,"description":"JWT实现身份认证JWT实现身份认证 步骤概述 使用 JSON Web Token (JWT) 进行身份验证通常涉及以下步骤： 用户登录 验证用户凭证 生成 JWT 发送 JWT 给用户 客户端存储 JWT 客户端发送 JWT 服务器验证 JWT 返回响应 刷新 Token（可选） 详细流程 1. 用户登录 用户向认证服务器提供登录凭证，如用户名和密码...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Best%20Practices/Authentication/Json%20Web%20Token/JWT%E5%AE%9E%E7%8E%B0%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"JWT实现身份认证"}],["meta",{"property":"og:description","content":"JWT实现身份认证JWT实现身份认证 步骤概述 使用 JSON Web Token (JWT) 进行身份验证通常涉及以下步骤： 用户登录 验证用户凭证 生成 JWT 发送 JWT 给用户 客户端存储 JWT 客户端发送 JWT 服务器验证 JWT 返回响应 刷新 Token（可选） 详细流程 1. 用户登录 用户向认证服务器提供登录凭证，如用户名和密码..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/cruldra/picx-images-hosting/raw/master/image.3nredctxi0.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT实现身份认证\\",\\"image\\":[\\"https://github.com/cruldra/picx-images-hosting/raw/master/image.3nredctxi0.webp\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"步骤概述","slug":"步骤概述","link":"#步骤概述","children":[]},{"level":2,"title":"详细流程","slug":"详细流程","link":"#详细流程","children":[{"level":3,"title":"1. 用户登录","slug":"_1-用户登录","link":"#_1-用户登录","children":[]},{"level":3,"title":"2. 验证用户凭证","slug":"_2-验证用户凭证","link":"#_2-验证用户凭证","children":[]},{"level":3,"title":"3. 生成 JWT","slug":"_3-生成-jwt","link":"#_3-生成-jwt","children":[]},{"level":3,"title":"4. 发送 JWT 给用户","slug":"_4-发送-jwt-给用户","link":"#_4-发送-jwt-给用户","children":[]},{"level":3,"title":"5. 客户端存储 JWT","slug":"_5-客户端存储-jwt","link":"#_5-客户端存储-jwt","children":[]},{"level":3,"title":"6. 客户端发送 JWT","slug":"_6-客户端发送-jwt","link":"#_6-客户端发送-jwt","children":[]},{"level":3,"title":"7. 服务器验证 JWT","slug":"_7-服务器验证-jwt","link":"#_7-服务器验证-jwt","children":[]},{"level":3,"title":"8. 返回响应","slug":"_8-返回响应","link":"#_8-返回响应","children":[]},{"level":3,"title":"9. 刷新 Token（可选）","slug":"_9-刷新-token-可选","link":"#_9-刷新-token-可选","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":1.92,"words":576},"filePathRelative":"Best Practices/Authentication/Json Web Token/JWT实现身份认证.md","localizedDate":"2024年7月3日","autoDesc":true}');export{p as comp,d as data};
