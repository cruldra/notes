import{_ as a,r as e,o as t,c as n,a as s,d as l,w as h,e as p,b as r}from"./app-Bmelea3n.js";const k={},d=p(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/cache/annotation/Cacheable.html" target="_blank" rel="noopener noreferrer">Cacheable</a> 用于标记在方法执行后,其返回值应该被缓存起来,如果后续有相同的参数调用方法,则直接从缓存中获取结果,以提高效率.</p><h2 id="在方法上使用-cacheable" tabindex="-1"><a class="header-anchor" href="#在方法上使用-cacheable"><span>在方法上使用<code>@Cacheable</code></span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Cacheable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;#id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;openai::assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> getAssistant</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Assistant</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;getAssistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> apiSecretService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createOpenAiClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getAssistant</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码将方法返回值缓存到<code>openai::assistant</code>键中,并且在下次调用<code>getAssistant</code>方法时,如果参数<code>id</code>相同,则直接从缓存中获取结果.</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> test3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    assistantService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getAssistant</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;asst_cqAmfVRWtH7dSkpxMDwYXZmO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    assistantService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getAssistant</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;asst_cqAmfVRWtH7dSkpxMDwYXZmO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到<code>getAssistant</code>只打印了一次,说明第二次是从缓存中获取的.</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended</span></span>
<span class="line"><span>getAssistant</span></span>
<span class="line"><span>2024-03-13T11:31:50.593+08:00  INFO 12452 --- [           main] c.d.e.openai.DefaultOpenAIClient         : curl -X GET -H &quot;Content-Type:application/json&quot; -H &quot;Authorization:Bearer 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&quot; -H &quot;OpenAI-Beta:assistants=v1&quot; &quot;https://openaiproxy.nexcode.top/v1//assistants/asst_cqAmfVRWtH7dSkpxMDwYXZmO&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="缓存管理器" tabindex="-1"><a class="header-anchor" href="#缓存管理器"><span>缓存管理器</span></a></h2><p>可以使用<code>cacheManager</code>属性指定使用的缓存管理器,值是一个<code>Spring Bean</code>的名称</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> org.springframework.cache.annotation.Cacheable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> SomeService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Cacheable</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;cacheName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> cacheManager</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;myCacheManager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> someCacheableMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> param</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // 方法的实现代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3>`,12);function c(o,g){const i=e("RouteLink");return t(),n("div",null,[d,s("ul",null,[s("li",null,[l(i,{to:"/Programming/SpringBoot/Data/Redis/%E7%BC%93%E5%AD%98%E6%B3%A8%E8%A7%A3/%E7%AE%80%E4%BB%8B.html#%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86%E5%99%A8"},{default:h(()=>[r("如何定义缓存管理器")]),_:1})])])])}const u=a(k,[["render",c],["__file","Cacheable.html.vue"]]),m=JSON.parse('{"path":"/Programming/SpringBoot/Data/Redis/%E7%BC%93%E5%AD%98%E6%B3%A8%E8%A7%A3/Cacheable.html","title":"Cacheable","lang":"zh-CN","frontmatter":{"title":"Cacheable","comment":false,"editLink":false,"prev":false,"next":false,"description":"简介 Cacheable 用于标记在方法执行后,其返回值应该被缓存起来,如果后续有相同的参数调用方法,则直接从缓存中获取结果,以提高效率. 在方法上使用@Cacheable 上面的代码将方法返回值缓存到openai::assistant键中,并且在下次调用getAssistant方法时,如果参数id相同,则直接从缓存中获取结果. 可以看到getAssi...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Programming/SpringBoot/Data/Redis/%E7%BC%93%E5%AD%98%E6%B3%A8%E8%A7%A3/Cacheable.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"Cacheable"}],["meta",{"property":"og:description","content":"简介 Cacheable 用于标记在方法执行后,其返回值应该被缓存起来,如果后续有相同的参数调用方法,则直接从缓存中获取结果,以提高效率. 在方法上使用@Cacheable 上面的代码将方法返回值缓存到openai::assistant键中,并且在下次调用getAssistant方法时,如果参数id相同,则直接从缓存中获取结果. 可以看到getAssi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cacheable\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"在方法上使用@Cacheable","slug":"在方法上使用-cacheable","link":"#在方法上使用-cacheable","children":[]},{"level":2,"title":"缓存管理器","slug":"缓存管理器","link":"#缓存管理器","children":[{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":1.01,"words":304},"filePathRelative":"Programming/SpringBoot/Data/Redis/缓存注解/Cacheable.md","localizedDate":"2024年7月3日","autoDesc":true}');export{u as comp,m as data};
