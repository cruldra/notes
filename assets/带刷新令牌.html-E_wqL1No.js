import{_ as e,o as s,c as n,e as t}from"./app-Bmelea3n.js";const a={},c=t('<figure><img src="https://github.com/cruldra/picx-images-hosting/raw/master/image.2yy4tcjbh4.webp" alt="带刷新令牌" tabindex="0" loading="lazy"><figcaption>带刷新令牌</figcaption></figure><h2 id="步骤概述" tabindex="-1"><a class="header-anchor" href="#步骤概述"><span>步骤概述</span></a></h2><ol><li><strong>用户登录</strong></li><li><strong>验证用户凭证</strong></li><li><strong>生成 Access Token 和 Refresh Token</strong></li><li><strong>发送令牌给用户</strong></li><li><strong>使用 Access Token 访问保护资源</strong></li><li><strong>Access Token 过期</strong></li><li><strong>使用 Refresh Token 请求新的 Access Token</strong></li><li><strong>验证 Refresh Token</strong></li><li><strong>返回新的 Access Token</strong></li><li><strong>循环使用新的 Access Token</strong></li><li><strong>Refresh Token 过期或失效处理</strong></li></ol><h2 id="详细流程" tabindex="-1"><a class="header-anchor" href="#详细流程"><span>详细流程</span></a></h2><h3 id="_1-用户登录" tabindex="-1"><a class="header-anchor" href="#_1-用户登录"><span>1. 用户登录</span></a></h3><p>用户提供登录凭据（如用户名和密码）以请求登录。</p><h3 id="_2-验证用户凭证" tabindex="-1"><a class="header-anchor" href="#_2-验证用户凭证"><span>2. 验证用户凭证</span></a></h3><p>服务器验证提供的用户凭证是否正确。</p><h3 id="_3-生成-access-token-和-refresh-token" tabindex="-1"><a class="header-anchor" href="#_3-生成-access-token-和-refresh-token"><span>3. 生成 Access Token 和 Refresh Token</span></a></h3><p>凭证通过验证后，服务器生成两个令牌：一个短期的 Access Token 用于访问资源，一个长期的 Refresh Token 用于在 Access Token 过期时获取新令牌。</p><h3 id="_4-发送令牌给用户" tabindex="-1"><a class="header-anchor" href="#_4-发送令牌给用户"><span>4. 发送令牌给用户</span></a></h3><p>服务器将 Access Token 和 Refresh Token 发送到客户端。</p><h3 id="_5-使用-access-token-访问保护资源" tabindex="-1"><a class="header-anchor" href="#_5-使用-access-token-访问保护资源"><span>5. 使用 Access Token 访问保护资源</span></a></h3><p>客户端在请求头中携带 Access Token 向服务器请求资源。</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">Authorization</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Bearer &lt;access_token&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_6-access-token-过期" tabindex="-1"><a class="header-anchor" href="#_6-access-token-过期"><span>6. Access Token 过期</span></a></h2><p>一旦 Access Token 过期，客户端尝试访问受保护资源将会失败。</p><h2 id="_7-使用-refresh-token-请求新的-access-token" tabindex="-1"><a class="header-anchor" href="#_7-使用-refresh-token-请求新的-access-token"><span>7. 使用 Refresh Token 请求新的 Access Token</span></a></h2><p>客户端使用存储的 Refresh Token 向认证服务器请求一个新的 Access Token。</p><h2 id="_8-验证-refresh-token" tabindex="-1"><a class="header-anchor" href="#_8-验证-refresh-token"><span>8. 验证 Refresh Token</span></a></h2><p>认证服务器验证 Refresh Token 的有效性，并确保它没有过期。</p><h2 id="_9-返回新的-access-token" tabindex="-1"><a class="header-anchor" href="#_9-返回新的-access-token"><span>9. 返回新的 Access Token</span></a></h2><p>如果 Refresh Token 验证成功，服务器将发放一个新的 Access Token。</p><h2 id="_10-循环使用新的-access-token" tabindex="-1"><a class="header-anchor" href="#_10-循环使用新的-access-token"><span>10. 循环使用新的 Access Token</span></a></h2><p>客户端使用新的 Access Token 继续访问受保护的资源。</p><h2 id="_11-refresh-token-过期或失效处理" tabindex="-1"><a class="header-anchor" href="#_11-refresh-token-过期或失效处理"><span>11. Refresh Token 过期或失效处理</span></a></h2><p>如果 Refresh Token 过期或失效（如用户登出或被撤销），客户端需要重新登录以获取新的 Access Token 和 Refresh Token。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li><strong>安全性</strong>: 应通过安全的 HTTPS 连接交换所有令牌。</li><li><strong>存储</strong>: 客户端应该安全地存储 Refresh Token，避免泄露。</li><li><strong>旋转</strong>: 每次刷新 Access Token 时，最好同时生成新的 Refresh Token，并使旧的 Refresh Token 失效。</li><li><strong>撤销</strong>: 应实现 Refresh Token 撤销机制，以应对令牌泄露情况。</li></ul>',29),o=[c];function r(i,l){return s(),n("div",null,o)}const k=e(a,[["render",r],["__file","带刷新令牌.html.vue"]]),p=JSON.parse('{"path":"/Best%20Practices/Authentication/Json%20Web%20Token/%E5%B8%A6%E5%88%B7%E6%96%B0%E4%BB%A4%E7%89%8C.html","title":"JWT实现身份认证(带刷新令牌)","lang":"zh-CN","frontmatter":{"title":"JWT实现身份认证(带刷新令牌)","comment":false,"editLink":false,"prev":false,"next":false,"description":"带刷新令牌带刷新令牌 步骤概述 用户登录 验证用户凭证 生成 Access Token 和 Refresh Token 发送令牌给用户 使用 Access Token 访问保护资源 Access Token 过期 使用 Refresh Token 请求新的 Access Token 验证 Refresh Token 返回新的 Access Token ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Best%20Practices/Authentication/Json%20Web%20Token/%E5%B8%A6%E5%88%B7%E6%96%B0%E4%BB%A4%E7%89%8C.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"JWT实现身份认证(带刷新令牌)"}],["meta",{"property":"og:description","content":"带刷新令牌带刷新令牌 步骤概述 用户登录 验证用户凭证 生成 Access Token 和 Refresh Token 发送令牌给用户 使用 Access Token 访问保护资源 Access Token 过期 使用 Refresh Token 请求新的 Access Token 验证 Refresh Token 返回新的 Access Token ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/cruldra/picx-images-hosting/raw/master/image.2yy4tcjbh4.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT实现身份认证(带刷新令牌)\\",\\"image\\":[\\"https://github.com/cruldra/picx-images-hosting/raw/master/image.2yy4tcjbh4.webp\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"步骤概述","slug":"步骤概述","link":"#步骤概述","children":[]},{"level":2,"title":"详细流程","slug":"详细流程","link":"#详细流程","children":[{"level":3,"title":"1. 用户登录","slug":"_1-用户登录","link":"#_1-用户登录","children":[]},{"level":3,"title":"2. 验证用户凭证","slug":"_2-验证用户凭证","link":"#_2-验证用户凭证","children":[]},{"level":3,"title":"3. 生成 Access Token 和 Refresh Token","slug":"_3-生成-access-token-和-refresh-token","link":"#_3-生成-access-token-和-refresh-token","children":[]},{"level":3,"title":"4. 发送令牌给用户","slug":"_4-发送令牌给用户","link":"#_4-发送令牌给用户","children":[]},{"level":3,"title":"5. 使用 Access Token 访问保护资源","slug":"_5-使用-access-token-访问保护资源","link":"#_5-使用-access-token-访问保护资源","children":[]}]},{"level":2,"title":"6. Access Token 过期","slug":"_6-access-token-过期","link":"#_6-access-token-过期","children":[]},{"level":2,"title":"7. 使用 Refresh Token 请求新的 Access Token","slug":"_7-使用-refresh-token-请求新的-access-token","link":"#_7-使用-refresh-token-请求新的-access-token","children":[]},{"level":2,"title":"8. 验证 Refresh Token","slug":"_8-验证-refresh-token","link":"#_8-验证-refresh-token","children":[]},{"level":2,"title":"9. 返回新的 Access Token","slug":"_9-返回新的-access-token","link":"#_9-返回新的-access-token","children":[]},{"level":2,"title":"10. 循环使用新的 Access Token","slug":"_10-循环使用新的-access-token","link":"#_10-循环使用新的-access-token","children":[]},{"level":2,"title":"11. Refresh Token 过期或失效处理","slug":"_11-refresh-token-过期或失效处理","link":"#_11-refresh-token-过期或失效处理","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":1.88,"words":564},"filePathRelative":"Best Practices/Authentication/Json Web Token/带刷新令牌.md","localizedDate":"2024年7月3日","autoDesc":true}');export{k as comp,p as data};
