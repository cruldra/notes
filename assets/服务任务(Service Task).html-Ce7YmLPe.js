import{_ as i,o as s,c as e,e as a}from"./app-Bmelea3n.js";const t={},n=a(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><code>Service Task</code>是一种自动执行的任务,通常用于执行不需要人工干预的操作,如调用外部服务、处理数据或执行复杂的业务逻辑.</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><ol><li>首先在<code>Camunda Modler</code>中创建一个<code>Service Task</code>节点,并配置<code>Service Task</code>的<code>Implementation</code>为<code>Java Delegate</code>,如图:</li></ol><figure><img src="https://github.com/cruldra/picx-images-hosting/raw/master/image.39l5hlyt9v.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以在<a href="https://www.alipan.com/s/Z1311iydhhj" target="_blank" rel="noopener noreferrer">这里</a>下载这个示例的<code>bpmn</code>文件.</p><ol start="2"><li>接下来实现<code>Java Delegate</code>的代码</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> PrintMessageDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">JavaDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> execute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(execution: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">DelegateExecution</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Hello from Camunda BPMN process!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使用以下代码将其部署到流程引擎中</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">repositoryService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createDeployment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">addClasspathResource</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;flows/sample-process.bpmn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>启动流程</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> processInstance </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> runtimeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">startProcessInstanceByKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;sample-process&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Process instance started: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> processInstance.id)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>查询任务状态</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> processInstance </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> runtimeService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createProcessInstanceQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">processInstanceId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(processInstanceId).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">singleResult</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (processInstance </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Running&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Completed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),l=[n];function h(r,k){return s(),e("div",null,l)}const d=i(t,[["render",h],["__file","服务任务(Service Task).html.vue"]]),c=JSON.parse('{"path":"/JVM/Camunda/%E6%B5%81%E7%A8%8B%E8%8A%82%E7%82%B9/%E6%9C%8D%E5%8A%A1%E4%BB%BB%E5%8A%A1(Service%20Task).html","title":"服务任务(Service Task)","lang":"zh-CN","frontmatter":{"title":"服务任务(Service Task)","comment":false,"editLink":false,"prev":false,"next":false,"order":1,"description":"简介 Service Task是一种自动执行的任务,通常用于执行不需要人工干预的操作,如调用外部服务、处理数据或执行复杂的业务逻辑. 示例 首先在Camunda Modler中创建一个Service Task节点,并配置Service Task的Implementation为Java Delegate,如图: 可以在这里下载这个示例的bpmn文件. 接...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JVM/Camunda/%E6%B5%81%E7%A8%8B%E8%8A%82%E7%82%B9/%E6%9C%8D%E5%8A%A1%E4%BB%BB%E5%8A%A1(Service%20Task).html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"服务任务(Service Task)"}],["meta",{"property":"og:description","content":"简介 Service Task是一种自动执行的任务,通常用于执行不需要人工干预的操作,如调用外部服务、处理数据或执行复杂的业务逻辑. 示例 首先在Camunda Modler中创建一个Service Task节点,并配置Service Task的Implementation为Java Delegate,如图: 可以在这里下载这个示例的bpmn文件. 接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/cruldra/picx-images-hosting/raw/master/image.39l5hlyt9v.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-29T17:32:29.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-09-29T17:32:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务任务(Service Task)\\",\\"image\\":[\\"https://github.com/cruldra/picx-images-hosting/raw/master/image.39l5hlyt9v.png\\"],\\"dateModified\\":\\"2024-09-29T17:32:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1727631149000,"updatedTime":1727631149000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":0.69,"words":207},"filePathRelative":"JVM/Camunda/流程节点/服务任务(Service Task).md","localizedDate":"2024年9月29日","autoDesc":true}');export{d as comp,c as data};
