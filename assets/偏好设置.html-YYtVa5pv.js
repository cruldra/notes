import{i as l,_ as h,r as t,o as k,c as p,d as u,e as r}from"./app-Bmelea3n.js";const d=l({__name:"偏好设置.html",setup(a,{expose:i}){i();const s={images:[{src:"https://cdn.jsdelivr.net/gh/hhypygy/images@master/20231231/image.5so89g8z8uc0.webp",alt:""}]};return Object.defineProperty(s,"__isScriptSetup",{enumerable:!1,value:!0}),s}}),B=r(`<h2 id="业务场景" tabindex="-1"><a class="header-anchor" href="#业务场景"><span>业务场景</span></a></h2><p>大部分现代应用程序都允许用户根据个人喜好对应用细节做出一些调整,例如用户的个性化设置、主题、语言等.这些个性化配置信息通常被称为<code>偏好设置</code>.</p><p><code>偏好设置</code>也可以细分为<code>应用偏好设置</code>和<code>用户偏好设置</code>两种:</p><ul><li><code>应用偏好设置</code> - 通常是指应用程序的一些全局配置,例如应用程序的名称、标题、logo等</li><li><code>用户偏好设置</code> - 通常是指用户的个性化配置,例如用户的个性化设置、主题、语言等</li></ul><h2 id="表设计" tabindex="-1"><a class="header-anchor" href="#表设计"><span>表设计</span></a></h2><p>一个典型的<code>用户偏好设置表</code>的结构可能如下:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> user_preferences</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> AUTO_INCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    user_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    preference_key </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    preference_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">TEXT</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    created_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">TIMESTAMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    updated_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">TIMESTAMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> CURRENT_TIMESTAMP,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (user_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> users(id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ON DELETE CASCADE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于具体业务的复杂多变,<code>偏好设置表</code>一般由软件开发人员根据具体业务自行创建.</p><p>小型系统中可以把<code>应用偏好设置</code>和<code>用户偏好设置</code>放在同一张表中以避免过度设计</p></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><p>对于<code>偏好设置</code>,一种常见的做法是:</p><ul><li>将<code>偏好设置</code>先存储到<code>redis</code>这种内存数据库中以便获得更好的性能</li><li>然后定期将<code>redis</code>中的数据持久化到<code>mysql</code>这类持久化存储中,以便在应用重启后能够恢复用户的偏好设置</li></ul><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><ol><li>引入相关依赖</li></ol><div class="language-gradle line-numbers-mode" data-highlighter="shiki" data-ext="gradle" data-title="gradle" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>implementation(&quot;cn.dongjak:starter-base&quot;)</span></span>
<span class="line"><span>implementation(&quot;cn.dongjak:extensions-preference&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>根据自己的业务创建<code>偏好设置表</code>、实体类、数据仓库等</li></ol><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hichat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.hi_preference</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    id        </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> auto_increment</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    \`key\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;键&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    value</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">     text</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">         null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    user_id   </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">          null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> hi_user_preference_hi_user_id_fk</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        foreign key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (user_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">references</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> hichat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">hi_user</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    comment </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;用户偏好设置&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实体类(实现<code>IPreference</code>接口):</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Entity</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Table</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;hi_preference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> HiPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">AbstractPersistable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Long</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">IPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @Column</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;namespace&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, length </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> namespace: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     * 键</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">     */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @Column</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;\`key\`&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, length </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> key: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @Lob</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @Column</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> var</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @ManyToOne</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(fetch </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> FetchType.LAZY)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @JoinColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;user_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> user: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据仓库:</p><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> HiPreferenceRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">JpaRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">Long</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    QuerydslPredicateExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">    @Query</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;SELECT e FROM HiPreference e WHERE CONCAT(e.namespace, &#39;.&#39;, e.key) = :value AND (:user IS NULL OR e.user = :user)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> findByKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Param</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Param</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) user: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>实现<code>IPreferenceService</code>接口</li></ol><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" data-title="kotlin" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">@Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> HiPreferenceService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> userPreferenceRepository: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiPreferenceRepository</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">IPreferenceService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(key: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, user: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">?): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">HiPreference</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">? {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> userPreferenceRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">findByKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(key, user).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">firstOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cn.dongjak:starter-base</code>会检测是否存在<code>IPreferenceService</code>的实现类并注入到了<code>IoC</code>容器,如果满足条件会在<code>/preference</code> 路径上创建一个用于获取<code>用户或系统偏好设置</code>的端点</p>`,23);function E(a,i,n,s,g,c){const e=t("ImageRenderer");return k(),p("div",null,[B,u(e,{value:s.images,width:"1000",height:"500"})])}const F=h(d,[["render",E],["__file","偏好设置.html.vue"]]),A=JSON.parse('{"path":"/JVM/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE.html","title":"偏好设置","lang":"zh-CN","frontmatter":{"title":"偏好设置","comment":false,"editLink":false,"prev":false,"next":false,"order":1,"description":"业务场景 大部分现代应用程序都允许用户根据个人喜好对应用细节做出一些调整,例如用户的个性化设置、主题、语言等.这些个性化配置信息通常被称为偏好设置. 偏好设置也可以细分为应用偏好设置和用户偏好设置两种: 应用偏好设置 - 通常是指应用程序的一些全局配置,例如应用程序的名称、标题、logo等 用户偏好设置 - 通常是指用户的个性化配置,例如用户的个性化设...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/JVM/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"偏好设置"}],["meta",{"property":"og:description","content":"业务场景 大部分现代应用程序都允许用户根据个人喜好对应用细节做出一些调整,例如用户的个性化设置、主题、语言等.这些个性化配置信息通常被称为偏好设置. 偏好设置也可以细分为应用偏好设置和用户偏好设置两种: 应用偏好设置 - 通常是指应用程序的一些全局配置,例如应用程序的名称、标题、logo等 用户偏好设置 - 通常是指用户的个性化配置,例如用户的个性化设..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"偏好设置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"业务场景","slug":"业务场景","link":"#业务场景","children":[]},{"level":2,"title":"表设计","slug":"表设计","link":"#表设计","children":[]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":2.3,"words":691},"filePathRelative":"JVM/解决方案/偏好设置.md","localizedDate":"2024年7月3日","autoDesc":true}');export{F as comp,A as data};
