import{_ as t,r as a,o as n,c as l,d as s,e}from"./app-Bmelea3n.js";const r={},h=e(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><code>js</code>中的定时器有两种,<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/setTimeout" target="_blank" rel="noopener noreferrer">setTimeout</a> 和<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/setInterval" target="_blank" rel="noopener noreferrer">setInterval</a>,分别用来实现延时执行和周期执行.</p><h2 id="settimeout" tabindex="-1"><a class="header-anchor" href="#settimeout"><span>setTimeout</span></a></h2><p><code>setTimeout(fun,delay)</code>用于在<code>delay</code>毫秒后执行<code>fun</code>函数,并且返回一个<code>id</code>用于取消这个定时器.</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setinterval" tabindex="-1"><a class="header-anchor" href="#setinterval"><span>setInterval</span></a></h2><p><code>setInterval(fun,delay)</code>用于每隔<code>delay</code>毫秒执行一次<code>fun</code>函数,并且返回一个<code>id</code>用于取消这个定时器.</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行重叠" tabindex="-1"><a class="header-anchor" href="#执行重叠"><span>执行重叠</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>使用<code>setInterval</code>时,如果回调函数执行时间超过了<code>delay</code>的时间,<code>js</code>仍然会尽快启动下一个定时器的回调,不会等待上一个回调完成.</p><p>这种情况被称之为<code>执行重叠</code>.<a href="https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9" target="_blank" rel="noopener noreferrer">这篇文章</a>也遇到了这个问题.</p></div>`,10),d=e(`<p>从上面的例子中可以看到,<code>setInterval</code>按照其指定的<code>delay=1000</code>执行,尽管回调函数的执行时间超过了<code>delay</code>的时间</p><p>解决这个问题的办法是递归调用<code>setTimeout</code>来模拟<code>setInterval</code>的效果:</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> doSomething</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // 假设这里的操作超过1秒</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">doSomething</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 初始化第一次执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">doSomething</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=e('<p>现在我们可以确保总是在上一个回调函数执行完成后再启动下一个回调函数.</p><h2 id="漂移问题" tabindex="-1"><a class="header-anchor" href="#漂移问题"><span>漂移问题</span></a></h2><p><code>setTimeout</code>和<code>setInterval</code>的执行时间并不是精确的,可能会因为各种原因发生<code>漂移</code>,指实际的执行时间与预期的时间不一样.</p><p>发生这种情况的原因可能包括:</p><ol><li><code>js</code>运行在单线程中,如果线程被长时间运行的代码阻塞,定时器的执行可能会被延迟.</li><li>浏览器或系统可能会对定时器的精度施加限制,特别是在标签页不是激活状态下,为了性能和能效.</li><li>浏览器的事件循环和其他异步事件可能导致定时器的执行被推迟.</li></ol>',5);function p(k,c){const i=a("SandPack");return n(),l("div",null,[h,s(i,{title:"%E7%A4%BA%E4%BE%8B",template:"react-ts",files:"eJx1Ur1q3EAQfpVBBCSBIsmENGedICQpDOmS7nTgjTQ6FEu7YneVnBGCNKlCqhTGIRACKVylDGn8NvZhv4VHP3e6s89bzex8883MN1Mb3ouydLVaGhMjK0ohNdSVwpcsz9+z+MQBcl6nKca6M99qprGBVIoCIkMii3VkHEZ8SE3Y6QfVR83ONimGyz6GKatyDZYN0xDqiAO9WHClYZaLhXJAoX5Dxhymm1KB0jLji9k8tGZzO+J91qYna4dsJMy4RvmR5UcJcRHt0eA/xK9zRI4udWGZayhQ4cUCJSamTUPsZngerC5+r77+uvl8tjr7t/r+7ery50NSDUozGn0Kr2gWl4tPVsu1DaPm3mUFimrPLLtUyNthHiUagUklmc4EJ3Sb87RvYg980NvKqMMQZq7rZrTl4w4+eVJ3C7Q6z3ZTIQumLbMoJkqZNjQOcW9AZO+BHLcb2y7YOPDM9337sBXw4LnvFwpCOKAvMtY7G1MI3sZ25W+l///l9vzP9d8fJP31+cUYk6gryYcLi3NkcrP48SLWwhE7ndTgDJlBOJLdW0R7om7BSovkcjKe4NKmIkEpEU7wdFp3Xw39xCLBsM50E3idCYFHoHBLiqY3A4+qkR1xo7kDIrsX9w==",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayAvITK7OADCVDPUMgMlCqrQUA5+YLgw=="}),d,s(i,{title:"%E7%A4%BA%E4%BE%8B",template:"react-ts",files:"eJxtUl1r1EAU/StDEDaBkKwPvqzZgPgBgm/6tlnomJ2U2GQSMhPdEgL1o1apKwXFqgjig1CErn0q+2Drn9lk03/Rm0l2s93tPJ2Zufeec8+9iaTfCUONs6HUkVw/DCKOkpiRu9jznmJ7S0Vwue84xOYCPuaYkxQ5UeAjS4oItrkl3bZonTrA289Y9dsSuAV/FiXD6pc4OPY4khXUNVFiUQTHDijjqOcFm0xFjPBHAPqouyAzGI9cutnrm3Kvr5TVmiyXchI9x96DmNrcDWiVNtcuX+FpshjHIKaL7kF1jQYvZAVEzkN0HeVHv/L9n8XOYX54Ovv+Jvv3Kj/+nX8aTc9+NHGg9InrkyDm6zQNFaGDVaKrYXXDsguCTNTTNM0FozeExM6NRHgoi5uiOUHkYy63fL/DWEtBqQrlF0GArwnZaCxb6nB2/D47361aysYf8ncH2cHH7O3oYm+Ufzkpxuezs/F0sj+d7Ewnf4rTXTCiOHk9+3y0Jn7uweokVHSz3W4vG5vC063yqRSQvdwDluL/t/zr34XRyxZDtJh2iRcbuO50RHgc0XqhbI/g6GEtZE2RrMzVVLXrS13BMJuiK5MsN1PzcSjDkFRYuQEZCjojjAjaItvdRLyl8GIHA2ImLk8NXUBk6BBk1n0I7goaOvABtqiUXgJxhj2e",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrVkpJLUjNS0nNS85MLVayAvITK7OADCVDPUMgMlCqrQUA5+YLgw=="}),o])}const m=t(r,[["render",p],["__file","定时器.html.vue"]]),u=JSON.parse('{"path":"/Programming/Frontend/Javascript/%E5%AE%9A%E6%97%B6%E5%99%A8.html","title":"定时器","lang":"zh-CN","frontmatter":{"title":"定时器","comment":false,"editLink":false,"prev":false,"next":false,"description":"简介 js中的定时器有两种,setTimeout 和setInterval,分别用来实现延时执行和周期执行. setTimeout setTimeout(fun,delay)用于在delay毫秒后执行fun函数,并且返回一个id用于取消这个定时器. setInterval setInterval(fun,delay)用于每隔delay毫秒执行一次fun...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Programming/Frontend/Javascript/%E5%AE%9A%E6%97%B6%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"定时器"}],["meta",{"property":"og:description","content":"简介 js中的定时器有两种,setTimeout 和setInterval,分别用来实现延时执行和周期执行. setTimeout setTimeout(fun,delay)用于在delay毫秒后执行fun函数,并且返回一个id用于取消这个定时器. setInterval setInterval(fun,delay)用于每隔delay毫秒执行一次fun..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"定时器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"setTimeout","slug":"settimeout","link":"#settimeout","children":[]},{"level":2,"title":"setInterval","slug":"setinterval","link":"#setinterval","children":[{"level":3,"title":"执行重叠","slug":"执行重叠","link":"#执行重叠","children":[]}]},{"level":2,"title":"漂移问题","slug":"漂移问题","link":"#漂移问题","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":2.42,"words":726},"filePathRelative":"Programming/Frontend/Javascript/定时器.md","localizedDate":"2024年7月3日","autoDesc":true}');export{m as comp,u as data};
