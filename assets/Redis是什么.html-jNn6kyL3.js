import{_ as e,o as t,c as r,e as o}from"./app-Bmelea3n.js";const s={},a=o('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>是一个完全开源免费的<a href="https://www.g2.com/categories/key-value-databases" target="_blank" rel="noopener noreferrer">key-value内存数据库</a></p><h2 id="主要特点" tabindex="-1"><a class="header-anchor" href="#主要特点"><span>主要特点</span></a></h2><ul><li><strong>速度快</strong>:因为是使用C语言这种性能优先的语言编写的,然后采用了单线程的架构<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>,避免了多线程的资源竞争问题,所以速度非常快</li><li><strong>丰富的数据类型</strong>:仅常用的就包括 <ul><li><strong>字符串</strong>:<a href="https://redis.io/docs/data-types/strings/" target="_blank" rel="noopener noreferrer">String</a></li><li><strong>哈希</strong>:<a href="https://redis.io/docs/data-types/hashes/" target="_blank" rel="noopener noreferrer">Hash</a></li><li><strong>列表</strong>:<a href="https://redis.io/docs/data-types/lists/" target="_blank" rel="noopener noreferrer">List</a></li><li><strong>集合</strong>:<a href="https://redis.io/docs/data-types/sets/" target="_blank" rel="noopener noreferrer">Set</a></li><li><strong>有序集合</strong>:<a href="https://redis.io/docs/data-types/sorted-sets/" target="_blank" rel="noopener noreferrer">Sorted Set</a></li><li><strong>位图</strong>:<a href="https://redis.io/topics/data-types-intro#bitmaps" target="_blank" rel="noopener noreferrer">Bitmap</a></li><li><strong>JSON</strong>:<a href="https://redis.io/topics/data-types-intro#json" target="_blank" rel="noopener noreferrer">JSON</a></li></ul></li><li><strong>持久化</strong>:支持RDB和AOF两种持久化机制</li><li><strong>主从复制</strong>:支持主从复制,可以实现读写分离</li><li><strong>高可用和分布式</strong>:支持Sentinel和Cluster两种高可用和分布式方案</li><li><strong>Lua脚本</strong>:支持Lua脚本,可以实现复杂的功能</li><li><strong>LRU驱逐策略</strong>:支持LRU驱逐策略,可以在内存不足时,自动删除最近最少使用的key</li><li><strong>原子性</strong>:Redis提供了多个命令和机制<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>来确保操作的原子性</li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://blog.csdn.net/kuangd_1992/article/details/130451679" target="_blank" rel="noopener noreferrer">【Redis】Redis单线程和多线程-CSDN博客</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>为什么redis不采用多线程</p><ul><li>简化开发和维护</li><li>避免多线程的资源竞争及减少上下文切换的开销</li><li>利用IO多路复用和非阻塞IO也能实现高并发</li><li>主要性能瓶颈是内存和网络带宽</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>然而,随着网络硬件的性能提升,Redis的性能瓶颈有时会出现在网络IO的处理上,也就是说,<strong>单个主线程处理网络请求的速度跟不上底层网络硬件的速度</strong>。因此,从<strong>Redis 6.0</strong>版本开始,引入了多线程来处理网络请求,提高网络请求处理的并行度,但对于读写操作命令Redis仍然使用单线程来处理 .这是因为,Redis处理请求时,网络处理经常是瓶颈,通过多个IO线程并行处理网络操作,可以提升实例的整体处理性能。而继续使用单线程执行命令操作,就不用为了保证Lua脚本、事务的原子性,额外开发多线程互斥加锁机制了,这样一来,Redis线程模型实现就简单了</p></div><a href="#footnote-ref1" class="footnote-backref">↩︎</a></li><li id="footnote2" class="footnote-item"><p><a href="https://poe.com/s/SJ41PvhwxHXIeESmecmL" target="_blank" rel="noopener noreferrer">Redis中几种实现原子性的机制</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',8),n=[a];function i(l,d){return t(),r("div",null,n)}const c=e(s,[["render",i],["__file","Redis是什么.html.vue"]]),h=JSON.parse('{"path":"/Databases/Redis/%E7%90%86%E8%AE%BA%E7%AF%87/Redis%E6%98%AF%E4%BB%80%E4%B9%88.html","title":"Redis是什么","lang":"zh-CN","frontmatter":{"title":"Redis是什么","comment":false,"editLink":false,"prev":false,"next":false,"order":1,"description":"简介 Redis是一个完全开源免费的key-value内存数据库 主要特点 速度快:因为是使用C语言这种性能优先的语言编写的,然后采用了单线程的架构[1],避免了多线程的资源竞争问题,所以速度非常快 丰富的数据类型:仅常用的就包括 字符串:String 哈希:Hash 列表:List 集合:Set 有序集合:Sorted Set 位图:Bitmap J...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Databases/Redis/%E7%90%86%E8%AE%BA%E7%AF%87/Redis%E6%98%AF%E4%BB%80%E4%B9%88.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"Redis是什么"}],["meta",{"property":"og:description","content":"简介 Redis是一个完全开源免费的key-value内存数据库 主要特点 速度快:因为是使用C语言这种性能优先的语言编写的,然后采用了单线程的架构[1],避免了多线程的资源竞争问题,所以速度非常快 丰富的数据类型:仅常用的就包括 字符串:String 哈希:Hash 列表:List 集合:Set 有序集合:Sorted Set 位图:Bitmap J..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis是什么\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"主要特点","slug":"主要特点","link":"#主要特点","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":2.07,"words":620},"filePathRelative":"Databases/Redis/理论篇/Redis是什么.md","localizedDate":"2024年7月3日","autoDesc":true}');export{c as comp,h as data};
