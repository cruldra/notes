import{_ as e,o as a,c as n,e as t}from"./app-Bmelea3n.js";const i={},s=t(`<h2 id="编写dockerfile" tabindex="-1"><a class="header-anchor" href="#编写dockerfile"><span>编写<code>Dockerfile</code></span></a></h2><ol><li>把<a href="https://github.com/vercel/next.js/blob/canary/examples/with-docker-multi-env/docker/production/Dockerfile" target="_blank" rel="noopener noreferrer">官方模板</a>下载下来根据自己的情况修改</li></ol><details class="hint-container details"><summary>Dockerfile</summary><p>FROM node:18-alpine AS base</p><h1 id="_1-install-dependencies-only-when-needed" tabindex="-1"><a class="header-anchor" href="#_1-install-dependencies-only-when-needed"><span>1. Install dependencies only when needed</span></a></h1><p>FROM base AS deps</p><h1 id="check-https-github-com-nodejs-docker-node-tree-b4117f9333da4138b03a546ec926ef50a31506c3-nodealpine-to-understand-why-libc6-compat-might-be-needed" tabindex="-1"><a class="header-anchor" href="#check-https-github-com-nodejs-docker-node-tree-b4117f9333da4138b03a546ec926ef50a31506c3-nodealpine-to-understand-why-libc6-compat-might-be-needed"><span>Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.</span></a></h1><p>RUN apk add --no-cache libc6-compat</p><p>WORKDIR /app</p><h1 id="install-dependencies-based-on-the-preferred-package-manager" tabindex="-1"><a class="header-anchor" href="#install-dependencies-based-on-the-preferred-package-manager"><span>Install dependencies based on the preferred package manager</span></a></h1><p>COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./ RUN <br> if [ -f yarn.lock ]; then yarn --frozen-lockfile; <br> elif [ -f package-lock.json ]; then npm ci; <br> elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm &amp;&amp; pnpm i; <br> else echo &quot;Lockfile not found.&quot; &amp;&amp; exit 1; <br> fi</p><h1 id="_2-rebuild-the-source-code-only-when-needed" tabindex="-1"><a class="header-anchor" href="#_2-rebuild-the-source-code-only-when-needed"><span>2. Rebuild the source code only when needed</span></a></h1><p>FROM base AS builder WORKDIR /app COPY --from=deps /app/node_modules ./node_modules COPY . .</p><h1 id="this-will-do-the-trick-use-the-corresponding-env-file-for-each-environment" tabindex="-1"><a class="header-anchor" href="#this-will-do-the-trick-use-the-corresponding-env-file-for-each-environment"><span>This will do the trick, use the corresponding env file for each environment.</span></a></h1><p>#COPY .env.production.sample .env.production ENV DOCKER=true RUN yarn build</p><h1 id="_3-production-image-copy-all-the-files-and-run-next" tabindex="-1"><a class="header-anchor" href="#_3-production-image-copy-all-the-files-and-run-next"><span>3. Production image, copy all the files and run next</span></a></h1><p>FROM base AS runner WORKDIR /app</p><p>ENV NODE_ENV=production</p><p>RUN addgroup -g 1001 -S nodejs RUN adduser -S nextjs -u 1001</p><p>COPY --from=builder /app/public ./public</p><h1 id="set-the-correct-permission-for-prerender-cache" tabindex="-1"><a class="header-anchor" href="#set-the-correct-permission-for-prerender-cache"><span>Set the correct permission for prerender cache</span></a></h1><p>RUN mkdir .next RUN chown nextjs:nodejs .next</p><h1 id="automatically-leverage-output-traces-to-reduce-image-size" tabindex="-1"><a class="header-anchor" href="#automatically-leverage-output-traces-to-reduce-image-size"><span>Automatically leverage output traces to reduce image size</span></a></h1><h1 id="https-nextjs-org-docs-advanced-features-output-file-tracing" tabindex="-1"><a class="header-anchor" href="#https-nextjs-org-docs-advanced-features-output-file-tracing"><span>https://nextjs.org/docs/advanced-features/output-file-tracing</span></a></h1><p>COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./ COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static</p><p>USER nextjs</p><p>EXPOSE 3000</p><p>ENV PORT 3000 ENV HOSTNAME localhost</p><p>CMD [&quot;node&quot;, &quot;server.js&quot;]</p></details><ol start="2"><li><code>next.config.js</code>中设置<code>output:&#39;standalone&#39;&#39;</code></li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">//next.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  output</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;standalone&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ul><li><a href="https://nextjs.org/docs/pages/building-your-application/deploying#docker-image" target="_blank" rel="noopener noreferrer">Building Your Application: Deploying | Next.js</a></li><li><a href="https://github.com/vercel/next.js/tree/canary/examples/with-docker-multi-env" target="_blank" rel="noopener noreferrer">next.js/examples/with-docker-multi-env at canary · vercel/next.js</a></li></ul>`,7),r=[s];function o(d,l){return a(),n("div",null,r)}const p=e(i,[["render",o],["__file","使用docker构建.html.vue"]]),h=JSON.parse('{"path":"/Programming/Frontend/Nextjs/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BA.html","title":"使用docker构建","lang":"zh-CN","frontmatter":{"title":"使用docker构建","comment":false,"editLink":false,"prev":false,"next":false,"order":2,"description":"编写Dockerfile 把官方模板下载下来根据自己的情况修改 Dockerfile FROM node:18-alpine AS base 1. Install dependencies only when needed FROM base AS deps Check https://github.com/nodejs/docker-node/tre...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Programming/Frontend/Nextjs/%E4%BD%BF%E7%94%A8docker%E6%9E%84%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"一星的臭弟弟"}],["meta",{"property":"og:title","content":"使用docker构建"}],["meta",{"property":"og:description","content":"编写Dockerfile 把官方模板下载下来根据自己的情况修改 Dockerfile FROM node:18-alpine AS base 1. Install dependencies only when needed FROM base AS deps Check https://github.com/nodejs/docker-node/tre..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-03T23:01:39.000Z"}],["meta",{"property":"article:author","content":"Cruldra"}],["meta",{"property":"article:modified_time","content":"2024-07-03T23:01:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用docker构建\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T23:01:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cruldra\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"编写Dockerfile","slug":"编写dockerfile","link":"#编写dockerfile","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1720047699000,"updatedTime":1720047699000,"contributors":[{"name":"cruldra","email":"cruldra@gmail.com","commits":1}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"Programming/Frontend/Nextjs/使用docker构建.md","localizedDate":"2024年7月3日","autoDesc":true}');export{p as comp,h as data};
